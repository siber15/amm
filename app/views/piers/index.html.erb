<%- model_class = Pier -%>
<div class="page-header">
  <h1><%=t '.title', :default => model_class.model_name.human.pluralize.titleize %></h1>
</div>
<table class="table table-striped">
  <thead>
    <tr>
      <th><%= model_class.human_attribute_name(:id) %></th>
      <th><%= model_class.human_attribute_name(:harbour_id) %></th>
      <th><%= model_class.human_attribute_name(:name) %></th>
      <th><%= model_class.human_attribute_name(:created_at) %></th>
      <th><%=t '.actions', :default => t("helpers.actions") %></th>
    </tr>
  </thead>
  <tbody>
    <% @piers.each do |pier| %>
      <tr>
        <!--
          hvis du kigger i på http://localhost:3000/routes
          kan du se at du ikke længere har en harbour_pier_path pga. shallow nesting
          derfor bliver harbour_pier_path ændret til pier_path(pier) - eller forkoretet bare pier (rails ved hvad du mener i det her tilfælde)
       -->
        <td><%= link_to pier.id, pier %></td>
        <td><%= pier.harbour.name %></td>
        <td><%= pier.name %></td>
        <td><%=l pier.created_at %></td>
        <td>

        <!--  
          det samme gør sig gældende her, du har ikke end edit_harbour_pier_path længere men kun en edit_pier path
          derfor skal du ikke referer harbour mere.
        -->

          <%= link_to t('.edit', :default => t("helpers.links.edit")),
                      edit_pier_path(pier), :class => 'btn btn-default btn-xs' %>

      </tr>
    <% end %>
  </tbody>
</table>

<%= link_to t('.new', :default => t("helpers.links.new")),
            new_harbour_pier_path,
            :class => 'btn btn-primary' %>
